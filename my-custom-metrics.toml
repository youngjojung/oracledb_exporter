[[metric]]
context = "test"
request = "SELECT 1 as value_1, 2 as value_2 FROM DUAL"
metricsdesc = { value_1 = "Simple example returning always 1.", value_2 = "Same but returning always 2." }

[[metric]]
context = "context_with_labels"
labels = [ "label_1", "label_2" ]
request = "SELECT 1 as value_1, 2 as value_2, 'First label' as label_1, 'Second label' as label_2 FROM DUAL"
metricsdesc = { value_1 = "Simple example returning always 1.", value_2 = "Same but returning always 2." }

[[metric]]
context = "Soft_Parse_Ratio"
request = "select round( 100* (1- hprs/ prse),2) as value_1 from (select value hprs from v$sysstat where name='parse count (hard)'), (select value prse from v$sysstat where name='parse count (total)')"
metricsdesc = { value_1= "Soft Parse Ratio" }

[[metric]]
context = "Parse_to_Execute_Ratio"
request = "select round(( 1-prse/exe)*100, 2) as value_1 from (select value prse from v$sysstat where name='parse count (total)'), (select value exe from v$sysstat where name ='execute count')"
metricsdesc = { value_1= "Parse to Execute Ratio" }

[[metric]]
context = "In_memory_Sort_Ratio"
request = "select decode((srtm+srtd ), 0, to_number(null), round(100*srtm/(srtd+srtm),2 )) as value_1 from (select value srtm from v$sysstat where name='sorts (memory)'), (select value srtd from v$sysstat where name='sorts (disk)')"
metricsdesc = { value_1= "In-memory sort ratio" }

[[metric]]
context = "Non_Parse_CPU"
request = "select decode(tcpu, 0, to_number(null), round(100*(1 -(prscpu /tcpu )),2)) as value_1 from (select value tcpu from v$sysstat where name='CPU used by this session'), (select value prscpu from v$sysstat where name='parse time cpu')"
metricsdesc = { value_1= "Non-Parse CPU" }

[[metric]]
context = "Parse_CPU_to_Parse_Elapsd"
request = "select decode(prsela, 0, to_number(null), round(prscpu /prsela* 100,2 )) as value_1 from (select value prsela from v$sysstat where name='parse time elapsed'), (select value prscpu from v$sysstat where name='parse time cpu')"
metricsdesc = { value_1= "Parse CPU to Parse Elapsd" }

#[[metric]]
#context = "Parse_Count_Per_Sec"
#request = "select s.metric_name as value_1, trim(to_char(max(s.average), '999G999G999G999G999D9')) as value_2  from dba_hist_sysmetric_summary s where s.metric_name in ('Total Parse Count Per Sec', 'Hard Parse Count Per Sec') group by s.metric_name"
#metricsdesc={value_1="Total Parse Count Per Sec",value_2="Hard Parse Count Per Sec"}

#[[metric]]
#context = "ASH_ALL"
#request = '''
#SELECT CPU as value_1, BACKGROUND_CPU as value_2, QUEUEING as value_3, CLUST as value_4, ADMINISTRATIVE as value_5, USER_IO as value_6, SYSTEM_IO as value_7, CONFIGURATION as value_8, COMMIT as value_9, CONCURRENCY as value_10, 
#   SCHEDULER as value_11, NETWORK as value_12, APPLICATION as value_13, OTHER as value_14
#   FROM(SELECT TO_CHAR(SAMPLE_TIME, 'HH24:MI') AS SAMPLE_TIME, 
#   ROUND(CPU / 60, 3) AS CPU, 
#   ROUND(BCPU / 60, 3) AS BACKGROUND_CPU,
#   ROUND(QUEUEING / 60, 3) AS QUEUEING,
#   ROUND(CLUST / 60, 3) AS CLUST,
#   ROUND(ADMINISTRATIVE / 60, 3) AS ADMINISTRATIVE,
#   ROUND(UIO / 60, 3) AS USER_IO,
#   ROUND(SIO / 60, 3) AS SYSTEM_IO,
#   ROUND(CONFIGURATION / 60, 3) AS CONFIGURATION,
#   ROUND(COMMIT / 60, 3) AS COMMIT,
#   ROUND(CONCURRENCY / 60, 3) AS CONCURRENCY,
#   ROUND(SCHEDULER / 60, 3) AS SCHEDULER,
#   ROUND(NETWORK / 60, 3) AS NETWORK,
#   ROUND(APPLICATION / 60, 3) AS APPLICATION,
#   ROUND(OTHER / 60, 3) AS OTHER
#   FROM
#  (SELECT TRUNC(SAMPLE_TIME, 'MI') AS SAMPLE_TIME, 
#   DECODE(SESSION_STATE, 'ON CPU', DECODE(SESSION_TYPE, 'BACKGROUND', 'BCPU', 'ON CPU'), WAIT_CLASS) AS WAIT_CLASS FROM V$ACTIVE_SESSION_HISTORY WHERE SAMPLE_TIME > SYSDATE - INTERVAL '1' HOUR
#   AND SAMPLE_TIME <= TRUNC(SYSDATE, 'MI')) ASH PIVOT(COUNT(*)
#   FOR WAIT_CLASS IN
#   ('ON CPU' AS CPU, 
#   'BCPU' AS BCPU, 
#   'Queueing' AS QUEUEING, 
#   'Cluster' AS CLUST, 
#   'Administrative' AS ADMINISTRATIVE, 
#   'User I/O' AS UIO, 
#   'System I/O' AS SIO, 
#   'Configuration' AS CONFIGURATION, 
#   'Commit' AS COMMIT, 
#   'Concurrency' AS CONCURRENCY,
#   'Scheduler' AS SCHEDULER,
#   'Network' AS NETWORK,
#   'Application' AS  APPLICATION,
#   'Other' AS  OTHER))
#   ORDER BY SAMPLE_TIME DESC) WHERE rownum = 1
#'''
#metricsdesc={value_1="CPU",value_2="BACKGROUND_CPU",value_3="QUEUEING",value_4="QUEUEING",value_5="ADMINISTRATIVE",value_6="USER_IO",value_7="SYSTEM_IO",value_8="CONFIGURATION",value_9="COMMIT",value_10="CONCURRENCY",value_11="SCHEDULER",value_12="NETWORK",value_13="APPLICATION",value_14="OTHER"}
